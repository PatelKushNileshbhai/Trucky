# Generated by Django 3.1.7 on 2021-04-27 06:22

import appuser.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OWNUSER',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('UPI_no', models.IntegerField(null=True)),
                ('mobile_no', models.CharField(max_length=50)),
                ('address', models.CharField(blank=True, max_length=500)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='seek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_weight', models.IntegerField()),
                ('rate', models.IntegerField(null=True)),
                ('typeof_vehicle', models.CharField(max_length=20, null=True)),
                ('nameof_goods', models.CharField(max_length=20)),
                ('status', models.IntegerField(default=0)),
                ('s_dest_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Seek_de', to='appuser.city')),
                ('s_pickup_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Seek_pi', to='appuser.city')),
                ('who_provider', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='who_is_provider_in_seeker', to=settings.AUTH_USER_MODEL)),
                ('who_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='who_is_seeker_in_seeker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='provide',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remaining_weight', models.IntegerField()),
                ('rate', models.IntegerField()),
                ('total_capacity', models.IntegerField()),
                ('numberplate_no', models.CharField(max_length=10, validators=[appuser.models.num_plate])),
                ('permits', models.CharField(max_length=20, null=True)),
                ('typeof_vehicle', models.CharField(max_length=20)),
                ('typeof_payment', models.CharField(max_length=20, null=True)),
                ('accepted', models.BooleanField(default=False)),
                ('p_dest_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pro_de', to='appuser.city')),
                ('p_pickup_city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pro_pi', to='appuser.city')),
                ('who_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='who_is_provider', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='deal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('provider_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='appuser.provide')),
                ('seeker_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='appuser.seek')),
            ],
        ),
        migrations.AddField(
            model_name='city',
            name='city_state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appuser.state'),
        ),
        migrations.CreateModel(
            name='Area',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('area_name', models.CharField(max_length=50)),
                ('area_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appuser.city')),
            ],
        ),
        migrations.AddField(
            model_name='ownuser',
            name='city',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appuser.city'),
        ),
        migrations.AddField(
            model_name='ownuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='ownuser',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='appuser.state'),
        ),
        migrations.AddField(
            model_name='ownuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
